HISTCONTROL=ignoreboth
HISTSIZE=5000
HISTFILESIZE=5000
HISTIGNORE="&:exit:clear:pwd:?:??"	#ignore one and two char commands

BROWSER=/usr/bin/chromium
EDITOR=/usr/bin/nano

shopt -s histappend
shopt -s globstar
shopt -s cmdhist
shopt -s cdspell
shopt -s checkwinsize

source /usr/share/fzf/key-bindings.bash
source /usr/share/fzf/completion.bash

# fe [FUZZY PATTERN] - Open the selected file with the default editor
#   - Bypass fuzzy finder if there's only one match (--select-1)
#   - Exit if there's no match (--exit-0)
fe() {
  local files
  IFS=$'\n' files=($(fzf-tmux --query="$1" --multi --select-1 --exit-0 --preview "bat --color \"always\" {}"))
  [[ -n "$files" ]] && ${EDITOR} "${files[@]}"
}

# fdr - cd to selected parent directory
fdr() {
  local declare dirs=()
  get_parent_dirs() {
    if [[ -d "${1}" ]]; then dirs+=("$1"); else return; fi
    if [[ "${1}" == '/' ]]; then
      for _dir in "${dirs[@]}"; do echo $_dir; done
    else
      get_parent_dirs $(dirname "$1")
    fi
  }
  local DIR=$(get_parent_dirs $(realpath "${1:-$PWD}") | fzf-tmux --tac)
  cd "$DIR"
}


# Another fd - cd into the selected directory
# This one differs from the above, by only showing the sub directories and not
#  showing the directories within those.
fd() {
  DIR=`find * -maxdepth 0 -type d -print 2> /dev/null | fzf-tmux` \
    && cd "$DIR"
}

# fda - including hidden directories
fda() {
  local dir
  dir=$(find ${1:-.} -type d 2> /dev/null | fzf +m) && cd "$dir"
}


source ~/.bin/setupprompt.sh
export GOPATH=~/go
export PATH=$PATH:~/.bin:/home/$USER/Android/Sdk/platform-tools:$GOPATH/bin:/home/$USER/Desktop/bachelor-thesis-data/script

alias sudo='sudo '	#make aliases work with sudo
alias ls='ls --color=auto'
alias la='ls -thora'
alias dd='dd status=progress'
alias open='run xdg-open'
alias grep='grep -n --color=auto'
alias find='find 2>/dev/null'	#discard permission errors
alias pdfcombine='gs -dBATCH -dNOPAUSE -q -sDEVICE=pdfwrite -dPDFSETTINGS=/prepress -sOutputFile='

alias gca='git commit -a'
alias gp='git pull --rebase'
alias gpu='git push'
alias cg='xclip -selection c -o'	# get clipboard to stdout
alias cs='xclip -selection c'		# set clipboard from stdin

alias cat='bat'
alias top='htop'
alias du='ncdu --color dark -rr -x --exclude .git --exclude node_modules'

function extract () {
	if [ -f $1 ] ; then
		case $1 in
			*.tar.bz2)   tar xvjf $1    ;;
			*.tar.gz)    tar xvzf $1    ;;
			*.bz2)       bunzip2 $1     ;;
			*.rar)       unrar x $1     ;;
			*.gz)        gunzip $1      ;;
			*.tar)       tar xvf $1     ;;
			*.tbz2)      tar xvjf $1    ;;
			*.tgz)       tar xvzf $1    ;;
			*.zip)       unzip $1       ;;
			*.Z)         uncompress $1  ;;
			*.7z)        7z x $1        ;;
			*)           echo "don't know how to extract '$1'..." ;;
		esac
	else
		echo "'$1' is not a valid file!"
	fi
}

#go up x directories
up(){
  local d=""
  limit=$1
  for ((i=1 ; i <= limit ; i++))
    do
      d=$d/..
    done
  d=$(echo $d | sed 's/^\///')
  if [ -z "$d" ]; then
    d=..
  fi
  cd $d
}

#upload file to transfer.sh
function transfer { curl --upload-file $1 https://transfer.sh/$1; echo; }

#start program and detatch from shell
function run { $@ > /dev/null 2>&1 & disown > /dev/null 2>&1; }

#reload udev rules
function udevreload
{
sudo udevadm control --reload-rules;
sudo udevadm trigger;
}

#enable colors in less
export LESS_TERMCAP_mb=$'\E[01;31m'
export LESS_TERMCAP_md=$'\E[01;31m'
export LESS_TERMCAP_me=$'\E[0m'
export LESS_TERMCAP_se=$'\E[0m'
export LESS_TERMCAP_so=$'\E[01;44;33m'
export LESS_TERMCAP_ue=$'\E[0m'
export LESS_TERMCAP_us=$'\E[01;32m'

# enable bash completion in interactive shells
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

if [ -f ~/.bashrclocal ]
then
	source ~/.bashrclocal
fi

#fix QT scaling
export QT_AUTO_SCREEN_SCALE_FACTOR=0
